name: Build

on:
  workflow_call:
    outputs:
      linux-artifact-filepath:
        value: ${{ jobs.linux.outputs.artifact-filepath }}
      windows-artifact-filepath:
        value: ${{ jobs.windows.outputs.artifact-filepath }}
      macos-artifact-filepath:
        value: ${{ jobs.macos.outputs.artifact-filepath }}

jobs:
  linux:
    runs-on: ubuntu-latest
    outputs:
      artifact-filepath: ${{ steps.values.outputs.archive_filepath }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --release --locked

      - name: Archive
        id: archive
        run: |
          archive_filename="clymene/"
          mkdir clymene
          mv target/release/clymene $archive_filename
          echo "::set-output name=filename::$archive_filename"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: clymene-linux
          path: ${{ steps.archive.outputs.filename }}
          retention-days: 1
          if-no-files-found: error

      - name: Define Output Values
        id: values
        run: |
          path=clymene-linux/${{ steps.archive.outputs.filename }}
          echo "::set-output name=archive_filepath::$path"

  windows:
    runs-on: windows-latest
    outputs:
      artifact-filepath: ${{ steps.values.outputs.archive_filepath }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --release --locked

      - name: Archive
        id: archive
        shell: bash
        run: |
          archive_filename="clymene/"
          mkdir clymene
          mv target/release/clymene $archive_filename
          echo "::set-output name=filename::$archive_filename"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: clymene-windows
          path: ${{ steps.archive.outputs.filename }}
          retention-days: 1
          if-no-files-found: error

      - name: Define Output Values
        id: values
        shell: bash
        run: |
          path=clymene-windows/${{ steps.archive.outputs.filename }}
          echo "::set-output name=archive_filepath::$path"

  macos:
    runs-on: macos-latest
    outputs:
      artifact-filepath: ${{ steps.values.outputs.archive_filepath }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --release --locked

      - name: Archive
        id: archive
        run: |
          archive_filename="clymene/"
          mkdir clymene
          mv target/release/clymene $archive_filename
          echo "::set-output name=filename::$archive_filename"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: clymene-macos
          path: ${{ steps.archive.outputs.filename }}
          retention-days: 1
          if-no-files-found: error

      - name: Define Output Values
        id: values
        run: |
          path=clymene-macos/${{ steps.archive.outputs.filename }}
          echo "::set-output name=archive_filepath::$path"
